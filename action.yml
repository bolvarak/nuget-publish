## Define the author of this action
author: 'bolvarak'

## Define our branding details
branding:
  color: blue
  icon: chevron-up

## Define the name of this action
name: 'NuGet Build & Publish'

## Describe this action
description: 'Build a .NET project and publish it to a NuGet Server.'

## Define the inputs to this action
inputs:

  configuration:
    default: 'Release'
    description: 'The build configuration to use when building the project or solution.  (values: Debug|Release, default: Release)'
    required: false

  github-organization:
    description: 'The GitHub Organization to publish the generated package to which forces the use of GitHub''s NuGet Servers.'
    required: false

  nuget-api-key:
    description: 'The API key which is used to authenticate with the NuGet server.'
    required: true

  nuget-auth-for-build:
    default: 'false'
    description: 'Flag that denotes whether to authenticate with the NuGet Server for the build process.'
    required: false

  nuget-password:
    description: 'The password with which to authenticate with the NuGet Server during the build process.'
    required: false

  nuget-username:
    description: 'The username with which to authenticate with the NuGet Server during the build process.'
    required: false

  nuspec-file:
    description: 'The path, relative to the root of the repository, to the NuSpec file.'
    required: false

  output:
    default: 'Silent'
    description: 'The output format of the application.  (values: Json|Plain|Silent|Xml, default: Silent)'
    required: false

  package-name:
    description: 'The name of the package to generate, that will be published to the NuGet Server.'
    required: false

  platform:
    default: 'AnyCpu'
    description: 'The platform to use when building the project or solution.  (values: AnyCpy|Arm64|x64|x86, default: AnyCpu)'
    required: false

  project:
    description: 'The path, relative to the root of the repository, to the project or solution file to be packaged.'
    required: true

  runtime:
    default: 'net8.x'
    description: 'The runtime to use when building the project or solution.  (values: net8.x|net7.x|net6.x, default: net8.x)'
    required: false

  scan-for-package-name:
    default: 'false'
    description: 'Flag that denotes whether to scan the project or solution file in an attempt to find the package name preferring PackageId over AssemblyName over <project>.  (default: false)'
    required: false

  verbosity:
    default: 'Minimal'
    description: 'The output level for the build process.  (values: Detailed|Diagnostic|Minimal|Normal|Quiet, default: Minimal)'
    required: false

  version:
    description: 'The static version for the NuGet package.'
    required: false

## Define the outputs from this action
outputs:

  NUGET_CONFIG:
    description: 'The generated NuGet.Config file if the nuget-auth-for-build flag is set to true.'
    value: '${{ steps.build-and-publish.NUGET_CONFIG }}'

  PACKAGE_NAME:
    description: 'The name of the generated package that was published to the NuGet Server.'
    value: '${{ steps.build-and-publish.PACKAGE_NAME }}'

  PACKAGE_PATH:
    description: 'The path to the generated package that was published to the NuGet Server.'
    value: '${{ steps.build-and-publish.PACKAGE_PATH }}'

  PROCESS_BUILD_ERROR:
    description: 'The standard error from the process responsible for building the project.'
    value: '${{ steps.build-and-publish.PROCESS_BUILD_ERROR }}'

  PROCESS_BUILD_OUTPUT:
    description: 'The standard output from the process responsible for building the project.'
    value: '${{ steps.build-and-publish.PROCESS_BUILD_OUTPUT }}'

  PROCESS_CLEAN_ERROR:
    description: 'The standard error from the process responsible for cleaning the project.'
    value: '${{ steps.build-and-publish.PROCESS_CLEAN_ERROR }}'

  PROCESS_CLEAN_OUTPUT:
    description: 'The standard output from the process responsible for cleaning the project.'
    value: '${{ steps.build-and-publish.PROCESS_CLEAN_OUTPUT }}'

  PROCESS_NUGET_PUSH_ERROR:
    description: 'The standard error from the process responsible for pushing the package to the NuGet Server.'
    value: '${{ steps.build-and-publish.PROCESS_NUGET_PUSH_ERROR }}'

  PROCESS_NUGET_PUSH_OUTPUT:
    description: 'The standard output from the process responsible for pushing the package to the NuGet Server.'
    value: '${{ steps.build-and-publish.PROCESS_NUGET_PUSH_OUTPUT }}'

  PROCESS_PACK_ERROR:
    description: 'The standard error from the process responsible for packing the project.'
    value: '${{ steps.build-and-publish.PROCESS_PACK_ERROR }}'

  PROCESS_PACK_OUTPUT:
    description: 'The standard output from the process responsible for packing the project.'
    value: '${{ steps.build-and-publish.PROCESS_PACK_OUTPUT }}'

  PROCESS_RESTORE_ERROR:
    description: 'The standard error from the process responsible for restoring the project.'
    value: '${{ steps.build-and-publish.PROCESS_RESTORE_ERROR }}'

  PROCESS_RESTORE_OUTPUT:
    description: 'The standard output from the process responsible for restoring the project.'
    value: '${{ steps.build-and-publish.PROCESS_RESTORE_OUTPUT }}'

  VERSION:
    description: 'The version of the generated package that was published to the NuGet Server.'
    value: '${{ steps.build-and-publish.VERSION }}'

## Define the runtime of this action
runs:
  using: 'composite'
  steps:

    ## We'll need Docker
    - name: 'Setup Docker'
      uses: 'docker/setup-qemu-action@v3'

    ## Build & Publish
    - name: 'Build & Publish NuGet Package'
      id: 'build-and-publish'
      env:
        NUGET_USERNAME: ${{ inputs.nuget-username == '' && github.actor || inputs.nuget-username }}
        NUGET_PASSWORD: ${{ inputs.nuget-password == '' && inputs.nuget-api-key || inputs.nuget-password }}
      shell: 'bash'
      run: |
        docker run \
          --env-file '${{ github.env }}' \
          --env 'GITHUB_ACTOR=${{ github.actor }}' \
          --env 'GITHUB_ENV=${{ github.env }}' \
          --env 'GITHUB_WORKSPACE=${{ github.workspace }}' \
          --interactive \
          --network 'host' \
          --rm \
          --volume '${{ github.env }}:${{ github.env }}' \
          --volume '${{ github.output }}:${{ github.output }}' \
          --volume '${{ github.workspace }}:${{ github.workspace }}' \
          'ghcr.io/bolvarak/nuget-publish:${{ inputs.runtime }}' \
            publish \
              --configuration '${{ inputs.configuration }}' \
              --github-organization '${{ inputs.github-organization }}' \
              --nuget-api-key '${{ inputs.nuget-api-key }}' \
              --nuget-auth-for-build '${{ inputs.nuget-auth-for-build }}' \
              --nuget-password "${NUGET_PASSWORD}" \
              --nuget-username "${NUGET_USERNAME}" \
              --nuspec-file '${{ inputs.nuspec-file }}' \
              --output '${{ inputs.output }}' \
              --package-name '${{ inputs.package-name }}' \
              --platform '${{ inputs.platform }}' \
              --project '${{ inputs.project }}' \
              --scan-for-package-name '${{ inputs.scan-for-package-name }}' \
              --verbosity '${{ inputs.verbosity }}' \
              --version '${{ inputs.version }}' \
              --working-directory '${{ github.workspace }}';
